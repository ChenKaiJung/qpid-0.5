# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = unit_test$(EXEEXT) $(am__EXEEXT_1) perftest$(EXEEXT) \
	txtest$(EXEEXT) latencytest$(EXEEXT) echotest$(EXEEXT) \
	client_test$(EXEEXT) topic_listener$(EXEEXT) \
	topic_publisher$(EXEEXT) publish$(EXEEXT) consume$(EXEEXT) \
	header_test$(EXEEXT) failover_soak$(EXEEXT) \
	declare_queues$(EXEEXT) replaying_sender$(EXEEXT) \
	resuming_receiver$(EXEEXT) txshift$(EXEEXT) txjob$(EXEEXT) \
	receiver$(EXEEXT) sender$(EXEEXT) PollerTest$(EXEEXT) \
	DispatcherTest$(EXEEXT)
@HAVE_XML_TRUE@am__append_1 = XmlClientSessionTest.cpp
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/cluster.mk $(srcdir)/ssl.mk

#
# Cluster tests makefile fragment, to be included in Makefile.am
# 

# NOTE: Programs using the openais library must be run with gid=ais
# You should do "newgrp ais" before running the tests to run these.
# 

# ais_check checks pre-requisites for cluster tests and runs them if ok.
@HAVE_LIBCPG_TRUE@am__append_2 = ais_check federated_cluster_test clustered_replication_test
@HAVE_LIBCPG_TRUE@am__append_3 = cluster_test
@HAVE_LIBCPG_TRUE@am__append_4 = ../cluster.la
@HAVE_LIBCPG_TRUE@am__append_5 = start_cluster cluster_python_tests stop_cluster
@SSL_TRUE@am__append_6 = ssl_test
@SSL_TRUE@am__append_7 = ssl_test
subdir = src/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/clock_time.m4 \
	$(top_srcdir)/m4/compiler-flags.m4 \
	$(top_srcdir)/m4/extensions.m4 $(top_srcdir)/m4/python.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
libdlclose_noop_la_LIBADD =
am_libdlclose_noop_la_OBJECTS = dlclose_noop.lo
libdlclose_noop_la_OBJECTS = $(am_libdlclose_noop_la_OBJECTS)
libshlibtest_la_LIBADD =
am_libshlibtest_la_OBJECTS = shlibtest.lo
libshlibtest_la_OBJECTS = $(am_libshlibtest_la_OBJECTS)
@HAVE_LIBCPG_TRUE@am__EXEEXT_1 = cluster_test$(EXEEXT)
am_DispatcherTest_OBJECTS = DispatcherTest.$(OBJEXT)
DispatcherTest_OBJECTS = $(am_DispatcherTest_OBJECTS)
am__DEPENDENCIES_1 = $(abs_builddir)/../libqpidcommon.la
am__DEPENDENCIES_2 =
DispatcherTest_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_PollerTest_OBJECTS = PollerTest.$(OBJEXT)
PollerTest_OBJECTS = $(am_PollerTest_OBJECTS)
PollerTest_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_client_test_OBJECTS = client_test.$(OBJEXT)
client_test_OBJECTS = $(am_client_test_OBJECTS)
am__DEPENDENCIES_3 = $(abs_builddir)/../libqpidclient.la
client_test_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__cluster_test_SOURCES_DIST = unit_test.cpp cluster_test.cpp \
	ClusterFixture.cpp ClusterFixture.h ForkedBroker.h \
	ForkedBroker.cpp
@HAVE_LIBCPG_TRUE@am_cluster_test_OBJECTS = unit_test.$(OBJEXT) \
@HAVE_LIBCPG_TRUE@	cluster_test.$(OBJEXT) \
@HAVE_LIBCPG_TRUE@	ClusterFixture.$(OBJEXT) \
@HAVE_LIBCPG_TRUE@	ForkedBroker.$(OBJEXT)
cluster_test_OBJECTS = $(am_cluster_test_OBJECTS)
@HAVE_LIBCPG_TRUE@cluster_test_DEPENDENCIES = $(am__DEPENDENCIES_3) \
@HAVE_LIBCPG_TRUE@	../cluster.la
am_consume_OBJECTS = consume.$(OBJEXT)
consume_OBJECTS = $(am_consume_OBJECTS)
consume_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_declare_queues_OBJECTS = declare_queues.$(OBJEXT)
declare_queues_OBJECTS = $(am_declare_queues_OBJECTS)
declare_queues_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_echotest_OBJECTS = echotest.$(OBJEXT)
echotest_OBJECTS = $(am_echotest_OBJECTS)
echotest_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_failover_soak_OBJECTS = failover_soak.$(OBJEXT) \
	ForkedBroker.$(OBJEXT)
failover_soak_OBJECTS = $(am_failover_soak_OBJECTS)
am__DEPENDENCIES_4 = $(abs_builddir)/../libqpidbroker.la
failover_soak_DEPENDENCIES = $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4)
am_header_test_OBJECTS = header_test.$(OBJEXT)
header_test_OBJECTS = $(am_header_test_OBJECTS)
header_test_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_latencytest_OBJECTS = latencytest.$(OBJEXT)
latencytest_OBJECTS = $(am_latencytest_OBJECTS)
latencytest_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_perftest_OBJECTS = perftest.$(OBJEXT)
perftest_OBJECTS = $(am_perftest_OBJECTS)
perftest_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_publish_OBJECTS = publish.$(OBJEXT)
publish_OBJECTS = $(am_publish_OBJECTS)
publish_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_receiver_OBJECTS = receiver.$(OBJEXT)
receiver_OBJECTS = $(am_receiver_OBJECTS)
receiver_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_replaying_sender_OBJECTS = replaying_sender.$(OBJEXT)
replaying_sender_OBJECTS = $(am_replaying_sender_OBJECTS)
replaying_sender_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_resuming_receiver_OBJECTS = resuming_receiver.$(OBJEXT)
resuming_receiver_OBJECTS = $(am_resuming_receiver_OBJECTS)
resuming_receiver_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_sender_OBJECTS = sender.$(OBJEXT)
sender_OBJECTS = $(am_sender_OBJECTS)
sender_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_topic_listener_OBJECTS = topic_listener.$(OBJEXT)
topic_listener_OBJECTS = $(am_topic_listener_OBJECTS)
topic_listener_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_topic_publisher_OBJECTS = topic_publisher.$(OBJEXT)
topic_publisher_OBJECTS = $(am_topic_publisher_OBJECTS)
topic_publisher_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_txjob_OBJECTS = txjob.$(OBJEXT)
txjob_OBJECTS = $(am_txjob_OBJECTS)
txjob_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_txshift_OBJECTS = txshift.$(OBJEXT)
txshift_OBJECTS = $(am_txshift_OBJECTS)
txshift_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_txtest_OBJECTS = txtest.$(OBJEXT)
txtest_OBJECTS = $(am_txtest_OBJECTS)
txtest_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__unit_test_SOURCES_DIST = unit_test.cpp unit_test.h BrokerFixture.h \
	SocketProxy.h exception_test.cpp RefCounted.cpp \
	SessionState.cpp logging.cpp AsyncCompletion.cpp Url.cpp \
	Uuid.cpp Shlib.cpp FieldValue.cpp FieldTable.cpp Array.cpp \
	QueueOptionsTest.cpp InlineAllocator.cpp InlineVector.cpp \
	ClientSessionTest.cpp SequenceSet.cpp StringUtils.cpp \
	IncompleteMessageList.cpp RangeSet.cpp AtomicValue.cpp \
	QueueTest.cpp AccumulatedAckTest.cpp DtxWorkRecordTest.cpp \
	DeliveryRecordTest.cpp ExchangeTest.cpp \
	HeadersExchangeTest.cpp MessageTest.cpp QueueRegistryTest.cpp \
	QueuePolicyTest.cpp FramingTest.cpp HeaderTest.cpp \
	SequenceNumberTest.cpp TimerTest.cpp TopicExchangeTest.cpp \
	TxBufferTest.cpp TxPublishTest.cpp MessageBuilderTest.cpp \
	ConnectionOptions.h ForkedBroker.h ForkedBroker.cpp \
	ManagementTest.cpp MessageReplayTracker.cpp ConsoleTest.cpp \
	QueueEvents.cpp ProxyTest.cpp RetryList.cpp \
	RateFlowcontrolTest.cpp FrameDecoder.cpp ReplicationTest.cpp \
	XmlClientSessionTest.cpp
@HAVE_XML_TRUE@am__objects_1 = XmlClientSessionTest.$(OBJEXT)
am_unit_test_OBJECTS = unit_test.$(OBJEXT) exception_test.$(OBJEXT) \
	RefCounted.$(OBJEXT) SessionState.$(OBJEXT) logging.$(OBJEXT) \
	AsyncCompletion.$(OBJEXT) Url.$(OBJEXT) Uuid.$(OBJEXT) \
	Shlib.$(OBJEXT) FieldValue.$(OBJEXT) FieldTable.$(OBJEXT) \
	Array.$(OBJEXT) QueueOptionsTest.$(OBJEXT) \
	InlineAllocator.$(OBJEXT) InlineVector.$(OBJEXT) \
	ClientSessionTest.$(OBJEXT) SequenceSet.$(OBJEXT) \
	StringUtils.$(OBJEXT) IncompleteMessageList.$(OBJEXT) \
	RangeSet.$(OBJEXT) AtomicValue.$(OBJEXT) QueueTest.$(OBJEXT) \
	AccumulatedAckTest.$(OBJEXT) DtxWorkRecordTest.$(OBJEXT) \
	DeliveryRecordTest.$(OBJEXT) ExchangeTest.$(OBJEXT) \
	HeadersExchangeTest.$(OBJEXT) MessageTest.$(OBJEXT) \
	QueueRegistryTest.$(OBJEXT) QueuePolicyTest.$(OBJEXT) \
	FramingTest.$(OBJEXT) HeaderTest.$(OBJEXT) \
	SequenceNumberTest.$(OBJEXT) TimerTest.$(OBJEXT) \
	TopicExchangeTest.$(OBJEXT) TxBufferTest.$(OBJEXT) \
	TxPublishTest.$(OBJEXT) MessageBuilderTest.$(OBJEXT) \
	ForkedBroker.$(OBJEXT) ManagementTest.$(OBJEXT) \
	MessageReplayTracker.$(OBJEXT) ConsoleTest.$(OBJEXT) \
	QueueEvents.$(OBJEXT) ProxyTest.$(OBJEXT) RetryList.$(OBJEXT) \
	RateFlowcontrolTest.$(OBJEXT) FrameDecoder.$(OBJEXT) \
	ReplicationTest.$(OBJEXT) $(am__objects_1)
unit_test_OBJECTS = $(am_unit_test_OBJECTS)
am__DEPENDENCIES_5 = $(abs_builddir)/../libqmfconsole.la
@HAVE_LIBCPG_TRUE@am__DEPENDENCIES_6 = ../cluster.la
unit_test_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libdlclose_noop_la_SOURCES) $(libshlibtest_la_SOURCES) \
	$(DispatcherTest_SOURCES) $(PollerTest_SOURCES) \
	$(client_test_SOURCES) $(cluster_test_SOURCES) \
	$(consume_SOURCES) $(declare_queues_SOURCES) \
	$(echotest_SOURCES) $(failover_soak_SOURCES) \
	$(header_test_SOURCES) $(latencytest_SOURCES) \
	$(perftest_SOURCES) $(publish_SOURCES) $(receiver_SOURCES) \
	$(replaying_sender_SOURCES) $(resuming_receiver_SOURCES) \
	$(sender_SOURCES) $(topic_listener_SOURCES) \
	$(topic_publisher_SOURCES) $(txjob_SOURCES) $(txshift_SOURCES) \
	$(txtest_SOURCES) $(unit_test_SOURCES)
DIST_SOURCES = $(libdlclose_noop_la_SOURCES) \
	$(libshlibtest_la_SOURCES) $(DispatcherTest_SOURCES) \
	$(PollerTest_SOURCES) $(client_test_SOURCES) \
	$(am__cluster_test_SOURCES_DIST) $(consume_SOURCES) \
	$(declare_queues_SOURCES) $(echotest_SOURCES) \
	$(failover_soak_SOURCES) $(header_test_SOURCES) \
	$(latencytest_SOURCES) $(perftest_SOURCES) $(publish_SOURCES) \
	$(receiver_SOURCES) $(replaying_sender_SOURCES) \
	$(resuming_receiver_SOURCES) $(sender_SOURCES) \
	$(topic_listener_SOURCES) $(topic_publisher_SOURCES) \
	$(txjob_SOURCES) $(txshift_SOURCES) $(txtest_SOURCES) \
	$(am__unit_test_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMQP_FINAL_XML = @AMQP_FINAL_XML@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMPILER_FLAGS = @COMPILER_FLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOWNLOAD_URL = @DOWNLOAD_URL@
DOXYGEN = @DOXYGEN@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GENERATE_FALSE = @GENERATE_FALSE@
GENERATE_TRUE = @GENERATE_TRUE@
HAS_RPMLINT_FALSE = @HAS_RPMLINT_FALSE@
HAS_RPMLINT_TRUE = @HAS_RPMLINT_TRUE@
HAVE_DOXYGEN_FALSE = @HAVE_DOXYGEN_FALSE@
HAVE_DOXYGEN_TRUE = @HAVE_DOXYGEN_TRUE@
HAVE_ECF_FALSE = @HAVE_ECF_FALSE@
HAVE_ECF_TRUE = @HAVE_ECF_TRUE@
HAVE_EPOLL_FALSE = @HAVE_EPOLL_FALSE@
HAVE_EPOLL_TRUE = @HAVE_EPOLL_TRUE@
HAVE_HELP2MAN_FALSE = @HAVE_HELP2MAN_FALSE@
HAVE_HELP2MAN_TRUE = @HAVE_HELP2MAN_TRUE@
HAVE_LIBCMAN_FALSE = @HAVE_LIBCMAN_FALSE@
HAVE_LIBCMAN_TRUE = @HAVE_LIBCMAN_TRUE@
HAVE_LIBCPG_FALSE = @HAVE_LIBCPG_FALSE@
HAVE_LIBCPG_TRUE = @HAVE_LIBCPG_TRUE@
HAVE_SASL_FALSE = @HAVE_SASL_FALSE@
HAVE_SASL_TRUE = @HAVE_SASL_TRUE@
HAVE_XML_FALSE = @HAVE_XML_FALSE@
HAVE_XML_TRUE = @HAVE_XML_TRUE@
HELP2MAN = @HELP2MAN@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIBTOOL_VERSION_INFO_ARG = @LIBTOOL_VERSION_INFO_ARG@
LIB_ACL = @LIB_ACL@
LIB_CLOCK_GETTIME = @LIB_CLOCK_GETTIME@
LIB_DLOPEN = @LIB_DLOPEN@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
NSPR_CONFIG = @NSPR_CONFIG@
NSS_CONFIG = @NSS_CONFIG@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
RDMA_FALSE = @RDMA_FALSE@
RDMA_TRUE = @RDMA_TRUE@
RPMLINT = @RPMLINT@
RUBY = @RUBY@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOCKLIBS = @SOCKLIBS@
SSL_CFLAGS = @SSL_CFLAGS@
SSL_FALSE = @SSL_FALSE@
SSL_LDFLAGS = @SSL_LDFLAGS@
SSL_TRUE = @SSL_TRUE@
STRIP = @STRIP@
SUNCC_RUNTIME_LIBS = @SUNCC_RUNTIME_LIBS@
SUNOS_FALSE = @SUNOS_FALSE@
SUNOS_TRUE = @SUNOS_TRUE@
URL = @URL@
VALGRIND = @VALGRIND@
VERSION = @VERSION@
WARNING_CFLAGS = @WARNING_CFLAGS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AM_CXXFLAGS = $(WARNING_CFLAGS) -DBOOST_TEST_DYN_LINK
INCLUDES = -I$(srcdir)/.. -I$(srcdir)/../gen -I$(top_builddir)/src/gen
abs_builddir = @abs_builddir@
extra_libs = 
lib_client = $(abs_builddir)/../libqpidclient.la
lib_common = $(abs_builddir)/../libqpidcommon.la
lib_broker = $(abs_builddir)/../libqpidbroker.la
lib_console = $(abs_builddir)/../libqmfconsole.la

# Disabled till we move to amqp_0_10 codec.
# 	amqp_0_10/serialize.cpp allSegmentTypes.h \
# 	amqp_0_10/ProxyTemplate.cpp \
# 	amqp_0_10/apply.cpp \
# 	amqp_0_10/Map.cpp \
# 	amqp_0_10/handlers.cpp 
check_LTLIBRARIES = libshlibtest.la libdlclose_noop.la

#
# Unit test program
#
# Unit tests are built as a single program to reduce valgrind overhead
# when running the tests. If you want to build a subset of the tests do 
#   rm -f unit_test; make unit_test unit_test_OBJECTS="unit_test.o SelectedTest.o"
# 
TESTS = unit_test $(am__append_2) $(am__append_6) start_broker \
	$(system_tests) python_tests stop_broker run_federation_tests \
	run_acl_tests run_cli_tests replication_test

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
EXTRA_DIST = ais_check start_cluster stop_cluster restart_cluster \
	cluster_python_tests cluster_python_tests_failing.txt \
	federated_cluster_test clustered_replication_test \
	$(am__append_7) run_test vg_check run-unit-tests start_broker \
	python_tests stop_broker quick_topictest quick_perftest \
	quick_txtest topictest run_header_test header_test.py ssl_test \
	config.null ais_check run_federation_tests run_cli_tests \
	run_acl_tests .valgrind.supp MessageUtils.h TestMessageStore.h \
	TxMocks.h replication_test run_perftest fanout_perftest \
	shared_perftest multiq_perftest topic_perftest \
	run_failover_soak reliable_replication_test \
	federated_cluster_test_with_node_failure tests.sln \
	client_test.vcproj consume.vcproj echotest.vcproj \
	header_test.vcproj latencytest.vcproj perftest.vcproj \
	publish.vcproj receiver.vcproj sender.vcproj shlibtest.vcproj \
	topic_listener.vcproj topic_publisher.vcproj txjob.vcproj \
	txshift.vcproj txtest.vcproj unit_test.vcproj
CLEANFILES = valgrind.out *.log *.vglog* dummy_test $(unit_wrappers)

# FIXME aconway 2008-05-23: Disabled interop_runner because it uses
# the obsolete Channel class.  Convert to Session and re-enable.
# 
# check_PROGRAMS += interop_runner

# interop_runner_SOURCES = 	\
#   interop_runner.cpp	 	\
#   SimpleTestCaseBase.cpp	\
#   BasicP2PTest.cpp		\
#   BasicPubSubTest.cpp		\
#   SimpleTestCaseBase.h		\
#   BasicP2PTest.h		\
#   BasicPubSubTest.h		\
#   TestCase.h			\
#   TestOptions.h ConnectionOptions.h
# interop_runner_LDADD = $(lib_client) $(lib_common) $(extra_libs)

# Longer running stability tests, not run by default check: target.
# Not run under valgrind, too slow
LONG_TESTS = $(am__append_5) start_broker fanout_perftest \
	shared_perftest multiq_perftest topic_perftest \
	run_failover_soak stop_broker reliable_replication_test \
	federated_cluster_test_with_node_failure
unit_test_LDADD = -lboost_unit_test_framework -lboost_regex \
	$(lib_client) $(lib_broker) $(lib_console) $(am__append_4)
unit_test_SOURCES = unit_test.cpp unit_test.h BrokerFixture.h \
	SocketProxy.h exception_test.cpp RefCounted.cpp \
	SessionState.cpp logging.cpp AsyncCompletion.cpp Url.cpp \
	Uuid.cpp Shlib.cpp FieldValue.cpp FieldTable.cpp Array.cpp \
	QueueOptionsTest.cpp InlineAllocator.cpp InlineVector.cpp \
	ClientSessionTest.cpp SequenceSet.cpp StringUtils.cpp \
	IncompleteMessageList.cpp RangeSet.cpp AtomicValue.cpp \
	QueueTest.cpp AccumulatedAckTest.cpp DtxWorkRecordTest.cpp \
	DeliveryRecordTest.cpp ExchangeTest.cpp \
	HeadersExchangeTest.cpp MessageTest.cpp QueueRegistryTest.cpp \
	QueuePolicyTest.cpp FramingTest.cpp HeaderTest.cpp \
	SequenceNumberTest.cpp TimerTest.cpp TopicExchangeTest.cpp \
	TxBufferTest.cpp TxPublishTest.cpp MessageBuilderTest.cpp \
	ConnectionOptions.h ForkedBroker.h ForkedBroker.cpp \
	ManagementTest.cpp MessageReplayTracker.cpp ConsoleTest.cpp \
	QueueEvents.cpp ProxyTest.cpp RetryList.cpp \
	RateFlowcontrolTest.cpp FrameDecoder.cpp ReplicationTest.cpp \
	$(am__append_1)
libshlibtest_la_LDFLAGS = -module -rpath $(abs_builddir)
libshlibtest_la_SOURCES = shlibtest.cpp
@HAVE_LIBCPG_TRUE@cluster_test_SOURCES = unit_test.cpp cluster_test.cpp ClusterFixture.cpp ClusterFixture.h ForkedBroker.h ForkedBroker.cpp
@HAVE_LIBCPG_TRUE@cluster_test_LDADD = $(lib_client) ../cluster.la -lboost_unit_test_framework 
perftest_SOURCES = perftest.cpp test_tools.h TestOptions.h ConnectionOptions.h
perftest_LDADD = $(lib_client) 
txtest_SOURCES = txtest.cpp  TestOptions.h ConnectionOptions.h
txtest_LDADD = $(lib_client) 
latencytest_SOURCES = latencytest.cpp TestOptions.h ConnectionOptions.h
latencytest_LDADD = $(lib_client) 
echotest_SOURCES = echotest.cpp TestOptions.h ConnectionOptions.h
echotest_LDADD = $(lib_client) 
client_test_SOURCES = client_test.cpp TestOptions.h ConnectionOptions.h
client_test_LDADD = $(lib_client) 
topic_listener_SOURCES = topic_listener.cpp TestOptions.h ConnectionOptions.h
topic_listener_LDADD = $(lib_client) 
topic_publisher_SOURCES = topic_publisher.cpp TestOptions.h ConnectionOptions.h
topic_publisher_LDADD = $(lib_client) 
publish_SOURCES = publish.cpp TestOptions.h ConnectionOptions.h
publish_LDADD = $(lib_client) 
consume_SOURCES = consume.cpp  TestOptions.h ConnectionOptions.h
consume_LDADD = $(lib_client) 
header_test_SOURCES = header_test.cpp TestOptions.h ConnectionOptions.h
header_test_LDADD = $(lib_client) 
failover_soak_SOURCES = failover_soak.cpp  ForkedBroker.h ForkedBroker.cpp
failover_soak_LDADD = $(lib_client) $(lib_broker)
declare_queues_SOURCES = declare_queues.cpp  
declare_queues_LDADD = $(lib_client) 
replaying_sender_SOURCES = replaying_sender.cpp  
replaying_sender_LDADD = $(lib_client) 
resuming_receiver_SOURCES = resuming_receiver.cpp  
resuming_receiver_LDADD = $(lib_client) 
txshift_SOURCES = txshift.cpp  TestOptions.h ConnectionOptions.h
txshift_LDADD = $(lib_client) 
txjob_SOURCES = txjob.cpp  TestOptions.h ConnectionOptions.h
txjob_LDADD = $(lib_client) 
receiver_SOURCES = receiver.cpp  TestOptions.h ConnectionOptions.h
receiver_LDADD = $(lib_client) 
sender_SOURCES = sender.cpp  TestOptions.h ConnectionOptions.h
sender_LDADD = $(lib_client) 
PollerTest_SOURCES = PollerTest.cpp
PollerTest_LDADD = $(lib_common) $(SOCKLIBS)
DispatcherTest_SOURCES = DispatcherTest.cpp
DispatcherTest_LDADD = $(lib_common) $(SOCKLIBS)
TESTS_ENVIRONMENT = VALGRIND=$(VALGRIND) srcdir=$(srcdir) QPID_DATA_DIR= BOOST_TEST_SHOW_PROGRESS=yes $(srcdir)/run_test 
system_tests = client_test quick_perftest quick_topictest run_header_test quick_txtest
libdlclose_noop_la_LDFLAGS = -module -rpath $(abs_builddir)
libdlclose_noop_la_SOURCES = dlclose_noop.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/cluster.mk $(srcdir)/ssl.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libdlclose_noop.la: $(libdlclose_noop_la_OBJECTS) $(libdlclose_noop_la_DEPENDENCIES) 
	$(LINK)  $(libdlclose_noop_la_LDFLAGS) $(libdlclose_noop_la_OBJECTS) $(libdlclose_noop_la_LIBADD) $(LIBS)
libshlibtest.la: $(libshlibtest_la_OBJECTS) $(libshlibtest_la_DEPENDENCIES) 
	$(CXXLINK)  $(libshlibtest_la_LDFLAGS) $(libshlibtest_la_OBJECTS) $(libshlibtest_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
DispatcherTest$(EXEEXT): $(DispatcherTest_OBJECTS) $(DispatcherTest_DEPENDENCIES) 
	@rm -f DispatcherTest$(EXEEXT)
	$(CXXLINK) $(DispatcherTest_LDFLAGS) $(DispatcherTest_OBJECTS) $(DispatcherTest_LDADD) $(LIBS)
PollerTest$(EXEEXT): $(PollerTest_OBJECTS) $(PollerTest_DEPENDENCIES) 
	@rm -f PollerTest$(EXEEXT)
	$(CXXLINK) $(PollerTest_LDFLAGS) $(PollerTest_OBJECTS) $(PollerTest_LDADD) $(LIBS)
client_test$(EXEEXT): $(client_test_OBJECTS) $(client_test_DEPENDENCIES) 
	@rm -f client_test$(EXEEXT)
	$(CXXLINK) $(client_test_LDFLAGS) $(client_test_OBJECTS) $(client_test_LDADD) $(LIBS)
cluster_test$(EXEEXT): $(cluster_test_OBJECTS) $(cluster_test_DEPENDENCIES) 
	@rm -f cluster_test$(EXEEXT)
	$(CXXLINK) $(cluster_test_LDFLAGS) $(cluster_test_OBJECTS) $(cluster_test_LDADD) $(LIBS)
consume$(EXEEXT): $(consume_OBJECTS) $(consume_DEPENDENCIES) 
	@rm -f consume$(EXEEXT)
	$(CXXLINK) $(consume_LDFLAGS) $(consume_OBJECTS) $(consume_LDADD) $(LIBS)
declare_queues$(EXEEXT): $(declare_queues_OBJECTS) $(declare_queues_DEPENDENCIES) 
	@rm -f declare_queues$(EXEEXT)
	$(CXXLINK) $(declare_queues_LDFLAGS) $(declare_queues_OBJECTS) $(declare_queues_LDADD) $(LIBS)
echotest$(EXEEXT): $(echotest_OBJECTS) $(echotest_DEPENDENCIES) 
	@rm -f echotest$(EXEEXT)
	$(CXXLINK) $(echotest_LDFLAGS) $(echotest_OBJECTS) $(echotest_LDADD) $(LIBS)
failover_soak$(EXEEXT): $(failover_soak_OBJECTS) $(failover_soak_DEPENDENCIES) 
	@rm -f failover_soak$(EXEEXT)
	$(CXXLINK) $(failover_soak_LDFLAGS) $(failover_soak_OBJECTS) $(failover_soak_LDADD) $(LIBS)
header_test$(EXEEXT): $(header_test_OBJECTS) $(header_test_DEPENDENCIES) 
	@rm -f header_test$(EXEEXT)
	$(CXXLINK) $(header_test_LDFLAGS) $(header_test_OBJECTS) $(header_test_LDADD) $(LIBS)
latencytest$(EXEEXT): $(latencytest_OBJECTS) $(latencytest_DEPENDENCIES) 
	@rm -f latencytest$(EXEEXT)
	$(CXXLINK) $(latencytest_LDFLAGS) $(latencytest_OBJECTS) $(latencytest_LDADD) $(LIBS)
perftest$(EXEEXT): $(perftest_OBJECTS) $(perftest_DEPENDENCIES) 
	@rm -f perftest$(EXEEXT)
	$(CXXLINK) $(perftest_LDFLAGS) $(perftest_OBJECTS) $(perftest_LDADD) $(LIBS)
publish$(EXEEXT): $(publish_OBJECTS) $(publish_DEPENDENCIES) 
	@rm -f publish$(EXEEXT)
	$(CXXLINK) $(publish_LDFLAGS) $(publish_OBJECTS) $(publish_LDADD) $(LIBS)
receiver$(EXEEXT): $(receiver_OBJECTS) $(receiver_DEPENDENCIES) 
	@rm -f receiver$(EXEEXT)
	$(CXXLINK) $(receiver_LDFLAGS) $(receiver_OBJECTS) $(receiver_LDADD) $(LIBS)
replaying_sender$(EXEEXT): $(replaying_sender_OBJECTS) $(replaying_sender_DEPENDENCIES) 
	@rm -f replaying_sender$(EXEEXT)
	$(CXXLINK) $(replaying_sender_LDFLAGS) $(replaying_sender_OBJECTS) $(replaying_sender_LDADD) $(LIBS)
resuming_receiver$(EXEEXT): $(resuming_receiver_OBJECTS) $(resuming_receiver_DEPENDENCIES) 
	@rm -f resuming_receiver$(EXEEXT)
	$(CXXLINK) $(resuming_receiver_LDFLAGS) $(resuming_receiver_OBJECTS) $(resuming_receiver_LDADD) $(LIBS)
sender$(EXEEXT): $(sender_OBJECTS) $(sender_DEPENDENCIES) 
	@rm -f sender$(EXEEXT)
	$(CXXLINK) $(sender_LDFLAGS) $(sender_OBJECTS) $(sender_LDADD) $(LIBS)
topic_listener$(EXEEXT): $(topic_listener_OBJECTS) $(topic_listener_DEPENDENCIES) 
	@rm -f topic_listener$(EXEEXT)
	$(CXXLINK) $(topic_listener_LDFLAGS) $(topic_listener_OBJECTS) $(topic_listener_LDADD) $(LIBS)
topic_publisher$(EXEEXT): $(topic_publisher_OBJECTS) $(topic_publisher_DEPENDENCIES) 
	@rm -f topic_publisher$(EXEEXT)
	$(CXXLINK) $(topic_publisher_LDFLAGS) $(topic_publisher_OBJECTS) $(topic_publisher_LDADD) $(LIBS)
txjob$(EXEEXT): $(txjob_OBJECTS) $(txjob_DEPENDENCIES) 
	@rm -f txjob$(EXEEXT)
	$(CXXLINK) $(txjob_LDFLAGS) $(txjob_OBJECTS) $(txjob_LDADD) $(LIBS)
txshift$(EXEEXT): $(txshift_OBJECTS) $(txshift_DEPENDENCIES) 
	@rm -f txshift$(EXEEXT)
	$(CXXLINK) $(txshift_LDFLAGS) $(txshift_OBJECTS) $(txshift_LDADD) $(LIBS)
txtest$(EXEEXT): $(txtest_OBJECTS) $(txtest_DEPENDENCIES) 
	@rm -f txtest$(EXEEXT)
	$(CXXLINK) $(txtest_LDFLAGS) $(txtest_OBJECTS) $(txtest_LDADD) $(LIBS)
unit_test$(EXEEXT): $(unit_test_OBJECTS) $(unit_test_DEPENDENCIES) 
	@rm -f unit_test$(EXEEXT)
	$(CXXLINK) $(unit_test_LDFLAGS) $(unit_test_OBJECTS) $(unit_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AccumulatedAckTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AsyncCompletion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AtomicValue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClientSessionTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClusterFixture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConsoleTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DeliveryRecordTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DispatcherTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DtxWorkRecordTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExchangeTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FieldTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FieldValue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ForkedBroker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FrameDecoder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FramingTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HeaderTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HeadersExchangeTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IncompleteMessageList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InlineAllocator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InlineVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ManagementTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MessageBuilderTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MessageReplayTracker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MessageTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PollerTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ProxyTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueueEvents.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueueOptionsTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueuePolicyTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueueRegistryTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueueTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RangeSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RateFlowcontrolTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RefCounted.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReplicationTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RetryList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceNumberTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SessionState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Shlib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StringUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TimerTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TopicExchangeTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TxBufferTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TxPublishTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Url.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Uuid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XmlClientSessionTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/client_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cluster_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/consume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/declare_queues.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlclose_noop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/echotest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exception_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/failover_soak.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/header_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/latencytest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perftest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/publish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/receiver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/replaying_sender.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resuming_receiver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sender.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shlibtest.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/topic_listener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/topic_publisher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/txjob.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/txshift.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/txtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit_test.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`; \
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`; \
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`; \
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Plo"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`; \
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`; \
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`; \
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$$depbase.Tpo" "$$depbase.Plo"; else rm -f "$$depbase.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@SSL_FALSE@clean-local:
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am

@SSL_TRUE@clean-local:
@SSL_TRUE@	rm -rf test_cert_db cert.password

check-long:
	$(MAKE) check TESTS="$(LONG_TESTS)" VALGRIND=
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
